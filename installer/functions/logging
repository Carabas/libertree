say() {
  echo -e "$1"
}

info() {
  # TODO: make this depend on verbosity setting
  say "$1"
}

warn() {
  say "[WARNING] $1"
}

fatal() {
  echo -e >&2 "\n[ERROR] $1"

  # execute clean up command in $2 if provided
  [[ "${2:-unset}" == "unset" ]] || $2
  exit 1
}

yes_or_fatal() {
  QUESTION="$1"
  ERROR="$2"

  echo -n "$QUESTION [y/N]"
  read -sn1 choice
  if [[ "$choice" != "y" ]]; then
    fatal "$ERROR"
  fi
  echo ""
}

skip_decision() {
  echo -n "$1 [y/N] "
  read -sn 1 choice
  if [[ "$choice" != "y" ]]; then
    say "SKIPPED"; return 1
  fi
  echo ""
}

offer_editing() {
  skip_decision "Do you want to edit the configuration file \"$1\" now?" && (\
    define_editor
    say "Opening \"$1\" for editing tasks."
    say "Please press a key to continue."
    read -n1
    $EDITOR "$1"
  )
  return 0
}

handle_config() {
  if [[ -e "$1" ]]; then
    warn "\"$1\" already exists."
    skip_decision "Do you want to overwrite it with \"$1.example\"?" && cp "$1.example" "$1"
  else
    cp "$1.example" "$1"
  fi

  offer_editing "$1"
}
